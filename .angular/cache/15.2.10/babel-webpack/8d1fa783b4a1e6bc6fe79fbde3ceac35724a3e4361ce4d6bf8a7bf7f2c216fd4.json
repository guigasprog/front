{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MecanicasServiceService {\n  constructor() {\n    this.valorRequesitadoParaUpar = 100;\n  }\n  missaoCompletaFacil(xp) {\n    return xp += Math.floor(Math.random() * (12 - 6) + 6);\n  }\n  missaoCompletaMedia(xp) {\n    return xp += Math.floor(Math.random() * (8 - 4) + 4);\n  }\n  missaoCompletaDificil(xp) {\n    return xp += Math.floor(Math.random() * (4 - 2) + 2);\n  }\n  missaoCompletaBoss(xp) {\n    return xp += Math.floor(Math.random() * (30 - 15) + 15);\n  }\n  uparDeNivel(xp) {\n    if (xp >= this.valorRequesitadoParaUpar) {\n      xp -= this.valorRequesitadoParaUpar;\n      this.valorRequesitadoParaUpar += this.valorRequesitadoParaUpar / 2;\n      return true;\n    } else return false;\n  }\n  xpGasto(xp) {\n    if (xp >= this.valorRequesitadoParaUpar) {\n      xp -= this.valorRequesitadoParaUpar;\n      return xp;\n    }\n    uparAtributo(pontoLivre, number);\n    {\n      if (pontoLivre > 0) return true;else return false;\n    }\n    morreu(hp, number);\n    {\n      if (hp < 1) {\n        let i;\n        let valor;\n        for (i = 0; i < 3; i++) {\n          valor = Math.floor(Math.random() * 20);\n          if (valor > 18) {\n            return false;\n          }\n        }\n        return true;\n      } else return false;\n    }\n  }\n  static #_ = this.ɵfac = function MecanicasServiceService_Factory(t) {\n    return new (t || MecanicasServiceService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MecanicasServiceService,\n    factory: MecanicasServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,uBAAuB;EAIlCC;IAFA,6BAAwB,GAAW,GAAG;EAEtB;EAEhBC,mBAAmB,CAACC,EAAS;IAC3B,OAAOA,EAAE,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACrD;EAEAC,mBAAmB,CAACJ,EAAS;IAC3B,OAAOA,EAAE,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACpD;EAEAE,qBAAqB,CAACL,EAAS;IAC7B,OAAOA,EAAE,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACpD;EAEAG,kBAAkB,CAACN,EAAS;IAC1B,OAAOA,EAAE,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAE,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;EACvD;EAEAI,WAAW,CAACP,EAAU;IACpB,IAAGA,EAAE,IAAI,IAAI,CAACQ,wBAAwB,EAAE;MACtCR,EAAE,IAAI,IAAI,CAACQ,wBAAwB;MACnC,IAAI,CAACA,wBAAwB,IAAK,IAAI,CAACA,wBAAwB,GAAC,CAAE;MAClE,OAAO,IAAI;KACZ,MAAM,OAAO,KAAK;EACrB;EACAC,OAAO,CAACT,EAAU;IAChB,IAAGA,EAAE,IAAI,IAAI,CAACQ,wBAAwB,EAAE;MACxCR,EAAE,IAAI,IAAI,CAACQ,wBAAwB;MACnC,OAAOR,EAAE;;IAGXU,YAAY,CAACC,UAAU,EAAEC,MAAM,CAAC;IAAC;MAC/B,IAAGD,UAAU,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,KAC1B,OAAO,KAAK;;IAGnBE,MAAM,CAACC,EAAE,EAAEF,MAAM,CAAC;IAAC;MACjB,IAAGE,EAAE,GAAG,CAAC,EAAE;QACT,IAAIC,CAAS;QACb,IAAIC,KAAa;QACjB,KAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;UACrBC,KAAK,GAAGf,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,EAAE,CAAC;UACpC,IAAGa,KAAK,GAAG,EAAE,EAAE;YACb,OAAO,KAAK;;;QAGhB,OAAO,IAAI;OACZ,MAAM,OAAO,KAAK;;EAGvB;EAAC;qBAtDYnB,uBAAuB;EAAA;EAAA;WAAvBA,uBAAuB;IAAAoB,SAAvBpB,uBAAuB;IAAAqB,YAFtB;EAAM","names":["MecanicasServiceService","constructor","missaoCompletaFacil","xp","Math","floor","random","missaoCompletaMedia","missaoCompletaDificil","missaoCompletaBoss","uparDeNivel","valorRequesitadoParaUpar","xpGasto","uparAtributo","pontoLivre","number","morreu","hp","i","valor","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Guigas\\Documents\\gamingAngular\\RpgGaming\\src\\app\\game\\mecanicas-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MecanicasServiceService {\n\n  valorRequesitadoParaUpar: number = 100;\n\n  constructor() { }\n\n  missaoCompletaFacil(xp:number) {\n    return xp += Math.floor(Math.random()*(12 - 6) + 6)\n  }\n\n  missaoCompletaMedia(xp:number) {\n    return xp += Math.floor(Math.random()*(8 - 4) + 4)\n  }\n\n  missaoCompletaDificil(xp:number) {\n    return xp += Math.floor(Math.random()*(4 - 2) + 2)\n  }\n\n  missaoCompletaBoss(xp:number) {\n    return xp += Math.floor(Math.random()*(30 - 15) + 15)\n  }\n\n  uparDeNivel(xp: number): boolean {\n    if(xp >= this.valorRequesitadoParaUpar) {\n      xp -= this.valorRequesitadoParaUpar;\n      this.valorRequesitadoParaUpar += (this.valorRequesitadoParaUpar/2);\n      return true;\n    } else return false;\n  }\n  xpGasto(xp: number) {\n    if(xp >= this.valorRequesitadoParaUpar) {\n    xp -= this.valorRequesitadoParaUpar;\n    return xp;\n  }\n\n  uparAtributo(pontoLivre: number) {\n    if(pontoLivre > 0) return true;\n    else return false;\n  }\n\n  morreu(hp: number) {\n    if(hp < 1) {\n      let i: number;\n      let valor: number;\n      for(i = 0; i < 3; i++) {\n        valor = Math.floor(Math.random()*20);\n        if(valor > 18) {\n          return false;\n        }\n      }\n      return true;\n    } else return false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}