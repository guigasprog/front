{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MecanicasServiceService {\n  constructor() {\n    this.valorRequesitadoParaUpar = 100;\n  }\n  missaoCompletaFacil(xp) {\n    return xp += Math.floor(Math.random() * (12 - 6) + 6);\n  }\n  missaoCompletaMedia(xp) {\n    return xp += Math.floor(Math.random() * (8 - 4) + 4);\n  }\n  missaoCompletaDificil(xp) {\n    return xp += Math.floor(Math.random() * (4 - 2) + 2);\n  }\n  missaoCompletaBoss(xp) {\n    return xp += Math.floor(Math.random() * (30 - 15) + 15);\n  }\n  uparDeNivel(xp) {\n    if (xp >= this.valorRequesitadoParaUpar) {\n      xp = xp - this.valorRequesitadoParaUpar;\n      this.valorRequesitadoParaUpar += this.valorRequesitadoParaUpar / 2;\n      return true;\n    } else return false;\n  }\n  xpGasto(xp) {\n    if (xp >= this.valorRequesitadoParaUpar) {\n      xp = xp - this.valorRequesitadoParaUpar;\n      return xp;\n    } else return xp;\n  }\n  atacar(multiplicadorFisico) {\n    let dadoDeAtaque = Math.floor(Math.random() * 20);\n    if (dadoDeAtaque > 18) {\n      return multiplicadorFisico * 2;\n    } else if (dadoDeAtaque) ;\n  }\n  uparAtributo(pontoLivre) {\n    if (pontoLivre > 0) return true;else return false;\n  }\n  morreu(hp) {\n    if (hp < 1) {\n      let i;\n      let valor;\n      for (i = 0; i < 3; i++) {\n        valor = Math.floor(Math.random() * 20);\n        if (valor > 18) {\n          return false;\n        }\n      }\n      return true;\n    } else return false;\n  }\n  static #_ = this.ɵfac = function MecanicasServiceService_Factory(t) {\n    return new (t || MecanicasServiceService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MecanicasServiceService,\n    factory: MecanicasServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,uBAAuB;EAIlCC;IAFA,6BAAwB,GAAW,GAAG;EAEtB;EAEhBC,mBAAmB,CAACC,EAAU;IAC5B,OAAOA,EAAE,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACvD;EAEAC,mBAAmB,CAACJ,EAAU;IAC5B,OAAOA,EAAE,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtD;EAEAE,qBAAqB,CAACL,EAAU;IAC9B,OAAOA,EAAE,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtD;EAEAG,kBAAkB,CAACN,EAAU;IAC3B,OAAOA,EAAE,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;EACzD;EAEAI,WAAW,CAACP,EAAU;IACpB,IAAIA,EAAE,IAAI,IAAI,CAACQ,wBAAwB,EAAE;MACvCR,EAAE,GAAGA,EAAE,GAAG,IAAI,CAACQ,wBAAwB;MACvC,IAAI,CAACA,wBAAwB,IAAK,IAAI,CAACA,wBAAwB,GAAG,CAAE;MACpE,OAAO,IAAI;KACZ,MAAM,OAAO,KAAK;EACrB;EAEAC,OAAO,CAACT,EAAU;IAChB,IAAIA,EAAE,IAAI,IAAI,CAACQ,wBAAwB,EAAE;MACvCR,EAAE,GAAGA,EAAE,GAAG,IAAI,CAACQ,wBAAwB;MACvC,OAAOR,EAAE;KACV,MAAM,OAAOA,EAAE;EAClB;EAEAU,MAAM,CAACC,mBAA2B;IAChC,IAAIC,YAAY,GAAWX,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,EAAE,CAAC;IACvD,IAAGS,YAAY,GAAG,EAAE,EAAE;MACpB,OAAOD,mBAAmB,GAAC,CAAC;KAC7B,MAAM,IAAGC,YAAY,EACxB;EAAA;EAEAC,YAAY,CAACC,UAAkB;IAC7B,IAAIA,UAAU,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,KAC3B,OAAO,KAAK;EACnB;EAEAC,MAAM,CAACC,EAAU;IACf,IAAIA,EAAE,GAAG,CAAC,EAAE;MACV,IAAIC,CAAS;MACb,IAAIC,KAAa;MACjB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QACtBC,KAAK,GAAGjB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;QACtC,IAAIe,KAAK,GAAG,EAAE,EAAE;UACd,OAAO,KAAK;;;MAGhB,OAAO,IAAI;KACZ,MAAM,OAAO,KAAK;EACrB;EAAC;qBA7DUrB,uBAAuB;EAAA;EAAA;WAAvBA,uBAAuB;IAAAsB,SAAvBtB,uBAAuB;IAAAuB,YAFtB;EAAM","names":["MecanicasServiceService","constructor","missaoCompletaFacil","xp","Math","floor","random","missaoCompletaMedia","missaoCompletaDificil","missaoCompletaBoss","uparDeNivel","valorRequesitadoParaUpar","xpGasto","atacar","multiplicadorFisico","dadoDeAtaque","uparAtributo","pontoLivre","morreu","hp","i","valor","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Guigas\\Documents\\gamingAngular\\RpgGaming\\src\\app\\game\\mecanicas-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MecanicasServiceService {\n\n  valorRequesitadoParaUpar: number = 100;\n\n  constructor() { }\n\n  missaoCompletaFacil(xp: number) {\n    return xp += Math.floor(Math.random() * (12 - 6) + 6)\n  }\n\n  missaoCompletaMedia(xp: number) {\n    return xp += Math.floor(Math.random() * (8 - 4) + 4)\n  }\n\n  missaoCompletaDificil(xp: number) {\n    return xp += Math.floor(Math.random() * (4 - 2) + 2)\n  }\n\n  missaoCompletaBoss(xp: number) {\n    return xp += Math.floor(Math.random() * (30 - 15) + 15)\n  }\n\n  uparDeNivel(xp: number): boolean {\n    if (xp >= this.valorRequesitadoParaUpar) {\n      xp = xp - this.valorRequesitadoParaUpar;\n      this.valorRequesitadoParaUpar += (this.valorRequesitadoParaUpar / 2);\n      return true;\n    } else return false;\n  }\n\n  xpGasto(xp: number): number {\n    if (xp >= this.valorRequesitadoParaUpar) {\n      xp = xp - this.valorRequesitadoParaUpar;\n      return xp;\n    } else return xp;\n  }\n\n  atacar(multiplicadorFisico: number) {\n    let dadoDeAtaque: number = Math.floor(Math.random()*20);\n    if(dadoDeAtaque > 18) {\n      return multiplicadorFisico*2\n    } else if(dadoDeAtaque)\n  }\n\n  uparAtributo(pontoLivre: number) {\n    if (pontoLivre > 0) return true;\n    else return false;\n  }\n\n  morreu(hp: number) {\n    if (hp < 1) {\n      let i: number;\n      let valor: number;\n      for (i = 0; i < 3; i++) {\n        valor = Math.floor(Math.random() * 20);\n        if (valor > 18) {\n          return false;\n        }\n      }\n      return true;\n    } else return false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}