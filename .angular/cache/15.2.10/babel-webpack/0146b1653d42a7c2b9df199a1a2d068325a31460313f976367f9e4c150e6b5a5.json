{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Renegado } from '../shared/renegado/renegado.model';\nlet GameplayComponent = class GameplayComponent {\n  constructor(mecanicasService) {\n    this.mecanicasService = mecanicasService;\n    this.jogador = new Renegado();\n    this.xp = 0;\n    this.ataque = 0;\n    this.contadorDePartidas = 0;\n  }\n  missaoFacil() {\n    this.monstro = this.mecanicasService.partidaFacil();\n  }\n  missaoCompletaFacil() {\n    this.jogador.vida += this.jogador.vida * 20 / 100;\n    this.jogador.xp = this.mecanicasService.missaoCompletaFacil(this.jogador.xp);\n    this.contadorDePartidas++;\n  }\n  missaoCompletaMedia() {\n    this.jogador.xp = this.mecanicasService.missaoCompletaMedia(this.jogador.xp);\n    this.contadorDePartidas++;\n  }\n  missaoCompletaDificil() {\n    this.jogador.xp = this.mecanicasService.missaoCompletaDificil(this.jogador.xp);\n    this.contadorDePartidas++;\n  }\n  missaoCompletaBoss() {\n    this.jogador.xp = this.mecanicasService.missaoCompletaBoss(this.jogador.xp);\n    this.contadorDePartidas++;\n  }\n  xpGasto() {\n    this.xp = this.jogador.xp;\n    this.jogador.xp = this.mecanicasService.xpGasto(this.jogador.xp);\n  }\n  uparDeNivel() {\n    if (this.mecanicasService.uparDeNivel(this.xp)) {\n      this.jogador.nivel++;\n      this.jogador.atributos.pontoLivre++;\n    }\n  }\n  atacar() {\n    this.ataque = this.mecanicasService.atacar(this.jogador.atributos.forca);\n    this.monstro.vida -= this.ataque;\n    this.ataque = this.mecanicasService.atacar(60);\n    this.jogador.vida -= this.ataque;\n    this.mecanicasService.morreu(this.jogador.vida);\n    if (this.monstro.vida < 1) this.missaoCompletaFacil();\n  }\n};\nGameplayComponent = __decorate([Component({\n  selector: 'app-gameplay',\n  templateUrl: './gameplay.component.html',\n  styleUrls: ['./gameplay.component.scss']\n})], GameplayComponent);\nexport { GameplayComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,QAAQ,QAAQ,mCAAmC;AAQrD,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAE5BC,YAAmBC,gBAAyC;IAAzC,qBAAgB,GAAhBA,gBAAgB;IAEnC,YAAO,GAAa,IAAIH,QAAQ,EAAE;IAElC,OAAE,GAAW,CAAC;IACd,WAAM,GAAW,CAAC;IAClB,uBAAkB,GAAW,CAAC;EANkC;EAQhEI,WAAW;IACT,IAAI,CAACC,OAAO,GAAG,IAAI,CAACF,gBAAgB,CAACG,YAAY,EAAE;EACrD;EACAC,mBAAmB;IACjB,IAAI,CAACC,OAAO,CAACC,IAAI,IAAK,IAAI,CAACD,OAAO,CAACC,IAAI,GAAG,EAAE,GAAI,GAAG;IACnD,IAAI,CAACD,OAAO,CAACE,EAAE,GAAG,IAAI,CAACP,gBAAgB,CAACI,mBAAmB,CAAC,IAAI,CAACC,OAAO,CAACE,EAAE,CAAC;IAC5E,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EACAC,mBAAmB;IACjB,IAAI,CAACJ,OAAO,CAACE,EAAE,GAAG,IAAI,CAACP,gBAAgB,CAACS,mBAAmB,CAAC,IAAI,CAACJ,OAAO,CAACE,EAAE,CAAC;IAC5E,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EACAE,qBAAqB;IACnB,IAAI,CAACL,OAAO,CAACE,EAAE,GAAG,IAAI,CAACP,gBAAgB,CAACU,qBAAqB,CAAC,IAAI,CAACL,OAAO,CAACE,EAAE,CAAC;IAC9E,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EACAG,kBAAkB;IAChB,IAAI,CAACN,OAAO,CAACE,EAAE,GAAG,IAAI,CAACP,gBAAgB,CAACW,kBAAkB,CAAC,IAAI,CAACN,OAAO,CAACE,EAAE,CAAC;IAC3E,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EACAI,OAAO;IACL,IAAI,CAACL,EAAE,GAAG,IAAI,CAACF,OAAO,CAACE,EAAE;IACzB,IAAI,CAACF,OAAO,CAACE,EAAE,GAAG,IAAI,CAACP,gBAAgB,CAACY,OAAO,CAAC,IAAI,CAACP,OAAO,CAACE,EAAE,CAAC;EAClE;EACAM,WAAW;IACT,IAAI,IAAI,CAACb,gBAAgB,CAACa,WAAW,CAAC,IAAI,CAACN,EAAE,CAAC,EAAE;MAC9C,IAAI,CAACF,OAAO,CAACS,KAAK,EAAE;MACpB,IAAI,CAACT,OAAO,CAACU,SAAS,CAACC,UAAU,EAAE;;EAEvC;EAEAC,MAAM;IACJ,IAAI,CAACC,MAAM,GAAG,IAAI,CAAClB,gBAAgB,CAACiB,MAAM,CAAC,IAAI,CAACZ,OAAO,CAACU,SAAS,CAACI,KAAK,CAAC;IACxE,IAAI,CAACjB,OAAO,CAACI,IAAI,IAAI,IAAI,CAACY,MAAM;IAChC,IAAI,CAACA,MAAM,GAAG,IAAI,CAAClB,gBAAgB,CAACiB,MAAM,CAAC,EAAE,CAAC;IAC9C,IAAI,CAACZ,OAAO,CAACC,IAAI,IAAI,IAAI,CAACY,MAAM;IAChC,IAAI,CAAClB,gBAAgB,CAACoB,MAAM,CAAC,IAAI,CAACf,OAAO,CAACC,IAAI,CAAC;IAC/C,IAAI,IAAI,CAACJ,OAAO,CAACI,IAAI,GAAG,CAAC,EAAE,IAAI,CAACF,mBAAmB,EAAE;EACvD;CAID;AApDYN,iBAAiB,eAL7BF,SAAS,CAAC;EACTyB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWzB,iBAAiB,CAoD7B;SApDYA,iBAAiB","names":["Component","Renegado","GameplayComponent","constructor","mecanicasService","missaoFacil","monstro","partidaFacil","missaoCompletaFacil","jogador","vida","xp","contadorDePartidas","missaoCompletaMedia","missaoCompletaDificil","missaoCompletaBoss","xpGasto","uparDeNivel","nivel","atributos","pontoLivre","atacar","ataque","forca","morreu","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Guigas\\Documents\\gamingAngular\\RpgGaming\\src\\app\\game\\gameplay\\gameplay.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MecanicasServiceService } from '../mecanicas-service.service';\nimport { Renegado } from '../shared/renegado/renegado.model';\nimport { MonstroFacil } from '../shared/monstroFacil/monstroFacil.model';\n\n@Component({\n  selector: 'app-gameplay',\n  templateUrl: './gameplay.component.html',\n  styleUrls: ['./gameplay.component.scss']\n})\nexport class GameplayComponent {\n\n  constructor(public mecanicasService: MecanicasServiceService) { }\n\n  jogador: Renegado = new Renegado();\n  monstro!: MonstroFacil;\n  xp: number = 0;\n  ataque: number = 0;\n  contadorDePartidas: number = 0;\n\n  missaoFacil() {\n    this.monstro = this.mecanicasService.partidaFacil();\n  }\n  missaoCompletaFacil() {\n    this.jogador.vida += (this.jogador.vida * 20) / 100;\n    this.jogador.xp = this.mecanicasService.missaoCompletaFacil(this.jogador.xp);\n    this.contadorDePartidas++;\n  }\n  missaoCompletaMedia() {\n    this.jogador.xp = this.mecanicasService.missaoCompletaMedia(this.jogador.xp);\n    this.contadorDePartidas++;\n  }\n  missaoCompletaDificil() {\n    this.jogador.xp = this.mecanicasService.missaoCompletaDificil(this.jogador.xp);\n    this.contadorDePartidas++;\n  }\n  missaoCompletaBoss() {\n    this.jogador.xp = this.mecanicasService.missaoCompletaBoss(this.jogador.xp);\n    this.contadorDePartidas++;\n  }\n  xpGasto() {\n    this.xp = this.jogador.xp;\n    this.jogador.xp = this.mecanicasService.xpGasto(this.jogador.xp);\n  }\n  uparDeNivel() {\n    if (this.mecanicasService.uparDeNivel(this.xp)) {\n      this.jogador.nivel++;\n      this.jogador.atributos.pontoLivre++\n    }\n  }\n\n  atacar() {\n    this.ataque = this.mecanicasService.atacar(this.jogador.atributos.forca);\n    this.monstro.vida -= this.ataque;\n    this.ataque = this.mecanicasService.atacar(60);\n    this.jogador.vida -= this.ataque;\n    this.mecanicasService.morreu(this.jogador.vida);\n    if (this.monstro.vida < 1) this.missaoCompletaFacil();\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}