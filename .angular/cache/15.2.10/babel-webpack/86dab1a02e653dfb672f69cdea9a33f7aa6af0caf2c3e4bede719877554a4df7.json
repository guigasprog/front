{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Renegado } from '../shared/renegado/renegado.model';\nimport { AtributosBase } from '../shared/atributosBase/atributosBase.model';\nlet GameplayComponent = class GameplayComponent {\n  constructor(mecanicasService) {\n    this.mecanicasService = mecanicasService;\n    this.corVida = \"\";\n    this.vidaBarra = \"\";\n    this.manaBarra = \"\";\n    this.staminaBarra = \"\";\n    this.sanidadeBarra = \"\";\n    this.vidaAtual = 0;\n    this.manaAtual = 0;\n    this.staminaAtual = 0;\n    this.sanidadeAtual = 0;\n    this.jogador = new Renegado();\n    this.xp = 0;\n    this.xpBarra = \"\";\n    this.xpRequisitado = 0;\n    this.melhoria = new AtributosBase(0, 0, 0, 0, 0, 0, 0);\n    this.pontosDeMelhoria = 0;\n    this.ataque = 0;\n    this.contadorDePartidas = 0;\n  }\n  ngOnInit() {\n    this.vidaAtual = this.jogador.vida;\n    this.manaAtual = this.jogador.mana;\n    this.staminaAtual = this.jogador.stamina;\n    this.sanidadeAtual = this.jogador.sanidade;\n    this.xpBarra = this.jogador.xp.toString() + \"%\";\n    this.vidaBarra = Math.round(this.vidaAtual * 100 / this.jogador.vida).toString();\n    this.corVida = \"hsl(calc(var(\" + this.vidaBarra + \") * 1.2), 80%, 50%)\";\n    this.vidaBarra = this.vidaBarra + \"%\";\n    this.manaBarra = Math.round(this.manaAtual * 100 / this.jogador.mana).toString() + \"%\";\n    this.staminaBarra = Math.round(this.staminaAtual * 100 / this.jogador.stamina).toString() + \"%\";\n    this.sanidadeBarra = Math.round(this.sanidadeAtual * 100 / this.jogador.sanidade).toString() + \"%\";\n  }\n  meditacao() {\n    document.getElementById(\"meditar\").style.display = \"block\";\n  }\n  fecharModal() {\n    document.getElementById(\"meditar\").style.display = \"none\";\n  }\n  missaoFacil() {\n    this.monstro = this.mecanicasService.partidaFacil();\n  }\n  missaoCompletaFacil() {\n    this.valorRequisitado();\n    this.jogador.vida += this.jogador.vida * 20 / 100;\n    this.jogador.xp = this.mecanicasService.missaoCompletaFacil(this.jogador.xp);\n    this.xpBarra = Math.round(this.jogador.xp * 100 / this.xpRequisitado).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoCompletaMedia() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaMedia(this.jogador.xp);\n    this.xpBarra = Math.round(this.jogador.xp * 100 / this.xpRequisitado).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoCompletaDificil() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaDificil(this.jogador.xp);\n    this.xpBarra = Math.round(this.jogador.xp * 100 / this.xpRequisitado).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoBoss() {\n    this.monstro = this.mecanicasService.partidaBoss();\n  }\n  missaoCompletaBoss() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaBoss(this.jogador.xp);\n    this.xpBarra = Math.round(this.jogador.xp * 100 / this.xpRequisitado).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  xpGasto() {\n    this.xp = this.jogador.xp;\n    this.jogador.xp = this.mecanicasService.xpGasto(this.jogador.xp);\n    if (this.jogador.xp > 0) this.xpBarra = Math.round(this.jogador.xp * 100 / this.xpRequisitado).toString() + \"%\";\n  }\n  uparDeNivel() {\n    if (this.mecanicasService.uparDeNivel(this.xp)) {\n      this.jogador.nivel++;\n      this.jogador.atributos.pontoLivre++;\n      this.pontosDeMelhoria = this.jogador.atributos.pontoLivre;\n    }\n  }\n  valorRequisitado() {\n    this.xpRequisitado = this.mecanicasService.valorRequisitado();\n  }\n  uparAtributos(atributo) {\n    if (this.pontosDeMelhoria > 0) {\n      switch (atributo) {\n        case 1:\n          this.melhoria.forca++;\n          break;\n        case 2:\n          this.melhoria.resistencia++;\n          break;\n        case 3:\n          this.melhoria.agilidade++;\n          break;\n        case 4:\n          this.melhoria.percepcao++;\n          break;\n        case 5:\n          this.melhoria.inteligencia++;\n          break;\n        case 6:\n          this.melhoria.carisma++;\n          break;\n        case 7:\n          this.melhoria.sorte++;\n      }\n      this.pontosDeMelhoria--;\n    }\n  }\n  confirmar() {\n    this.jogador.atributos.forca = this.jogador.atributos.forca + this.melhoria.forca;\n    this.jogador.atributos.resistencia = this.jogador.atributos.resistencia + this.melhoria.resistencia;\n    this.jogador.atributos.agilidade = this.jogador.atributos.agilidade + this.melhoria.agilidade;\n    this.jogador.atributos.percepcao = this.jogador.atributos.percepcao + this.melhoria.percepcao;\n    this.jogador.atributos.inteligencia = this.jogador.atributos.inteligencia + this.melhoria.inteligencia;\n    this.jogador.atributos.carisma = this.jogador.atributos.carisma + this.melhoria.carisma;\n    this.jogador.atributos.sorte = this.jogador.atributos.sorte + this.melhoria.sorte;\n    this.melhoria.forca = 0;\n    this.melhoria.resistencia = 0;\n    this.melhoria.agilidade = 0;\n    this.melhoria.percepcao = 0;\n    this.melhoria.inteligencia = 0;\n    this.melhoria.carisma = 0;\n    this.melhoria.sorte = 0;\n    this.pontosDeMelhoria = 0;\n    this.jogador.atributos.pontoLivre = 0;\n  }\n  atacar() {\n    this.ataque = this.mecanicasService.atacar(this.jogador.atributos.forca);\n    this.monstro.vida -= this.ataque;\n    this.ataque = this.mecanicasService.atacar(this.monstro.atributosBase.forca);\n    this.vidaAtual -= this.ataque;\n    this.vidaBarra = Math.round(this.vidaAtual * 100 / this.jogador.vida).toString();\n    this.corVida = \"hsl( calc(var(\" + this.vidaBarra + \") * 1.2) , 80%, 50%)\";\n    this.vidaBarra = this.vidaBarra + \"%\";\n    this.manaBarra = Math.round(this.manaAtual * 100 / this.jogador.mana).toString() + \"%\";\n    this.staminaBarra = Math.round(this.staminaAtual * 100 / this.jogador.stamina).toString() + \"%\";\n    this.sanidadeBarra = Math.round(this.sanidadeAtual * 100 / this.jogador.sanidade).toString() + \"%\";\n    this.mecanicasService.morreu(this.jogador.vida);\n    if (this.monstro.vida < 1) this.missaoCompletaFacil();\n  }\n};\nGameplayComponent = __decorate([Component({\n  selector: 'app-gameplay',\n  templateUrl: './gameplay.component.html',\n  styleUrls: ['./gameplay.component.scss']\n})], GameplayComponent);\nexport { GameplayComponent };","map":{"version":3,"mappings":"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","names":["Component","Renegado","AtributosBase","GameplayComponent","constructor","mecanicasService","ngOnInit","vidaAtual","jogador","vida","manaAtual","mana","staminaAtual","stamina","sanidadeAtual","sanidade","xpBarra","xp","toString","vidaBarra","Math","round","corVida","manaBarra","staminaBarra","sanidadeBarra","meditacao","document","getElementById","style","display","fecharModal","missaoFacil","monstro","partidaFacil","missaoCompletaFacil","valorRequisitado","xpRequisitado","contadorDePartidas","missaoCompletaMedia","missaoCompletaDificil","missaoBoss","partidaBoss","missaoCompletaBoss","xpGasto","uparDeNivel","nivel","atributos","pontoLivre","pontosDeMelhoria","uparAtributos","atributo","melhoria","forca","resistencia","agilidade","percepcao","inteligencia","carisma","sorte","confirmar","atacar","ataque","atributosBase","morreu","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Guigas\\Documents\\gamingAngular\\RpgGaming\\src\\app\\game\\gameplay\\gameplay.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MecanicasServiceService } from '../mecanicas-service.service';\nimport { Renegado } from '../shared/renegado/renegado.model';\nimport { MonstroFacil } from '../shared/monstroFacil/monstroFacil.model';\nimport { AtributosBase } from '../shared/atributosBase/atributosBase.model';\n\n@Component({\n  selector: 'app-gameplay',\n  templateUrl: './gameplay.component.html',\n  styleUrls: ['./gameplay.component.scss']\n})\nexport class GameplayComponent implements OnInit {\n\n  constructor(public mecanicasService: MecanicasServiceService) { }\n  \n  corVida: string = \"\";\n  vidaBarra: string = \"\";\n  manaBarra: string = \"\";\n  staminaBarra: string = \"\";\n  sanidadeBarra: string = \"\";\n  vidaAtual: number = 0;\n  manaAtual: number = 0;\n  staminaAtual: number = 0;\n  sanidadeAtual: number = 0;\n  jogador: Renegado = new Renegado();\n  monstro!: any;\n  xp: number = 0;\n  xpBarra: string = \"\";\n  xpRequisitado: number = 0;\n  melhoria: AtributosBase = new AtributosBase(0, 0, 0, 0, 0, 0, 0);\n  pontosDeMelhoria: number = 0;\n  ataque: number = 0;\n  contadorDePartidas: number = 0;\n\n\n\n  ngOnInit(): void {\n    this.vidaAtual = this.jogador.vida;\n    this.manaAtual = this.jogador.mana;\n    this.staminaAtual = this.jogador.stamina;\n    this.sanidadeAtual = this.jogador.sanidade;\n    this.xpBarra = this.jogador.xp.toString() + \"%\";\n    this.vidaBarra = Math.round((this.vidaAtual*100)/this.jogador.vida).toString();\n    this.corVida = \"hsl(calc(var(\" + this.vidaBarra + \") * 1.2), 80%, 50%)\";\n    this.vidaBarra = this.vidaBarra + \"%\";\n    this.manaBarra = Math.round((this.manaAtual*100)/this.jogador.mana).toString() + \"%\";\n    this.staminaBarra = Math.round((this.staminaAtual*100)/this.jogador.stamina).toString() + \"%\";\n    this.sanidadeBarra = Math.round((this.sanidadeAtual*100)/this.jogador.sanidade).toString() + \"%\";\n  }\n\n  meditacao() {\n    document.getElementById(\"meditar\")!.style.display = \"block\";\n  }\n\n  fecharModal() {\n    document.getElementById(\"meditar\")!.style.display = \"none\";\n  }\n\n  missaoFacil() {\n    this.monstro = this.mecanicasService.partidaFacil();\n  }\n  missaoCompletaFacil() {\n    this.valorRequisitado();\n    this.jogador.vida += (this.jogador.vida * 20) / 100;\n    this.jogador.xp = this.mecanicasService.missaoCompletaFacil(this.jogador.xp);\n    this.xpBarra = (Math.round((this.jogador.xp * 100) / this.xpRequisitado)).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoCompletaMedia() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaMedia(this.jogador.xp);\n    this.xpBarra = (Math.round((this.jogador.xp * 100) / this.xpRequisitado)).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoCompletaDificil() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaDificil(this.jogador.xp);\n    this.xpBarra = (Math.round((this.jogador.xp * 100) / this.xpRequisitado)).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoBoss() {\n    this.monstro = this.mecanicasService.partidaBoss();\n  }\n  missaoCompletaBoss() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaBoss(this.jogador.xp);\n    this.xpBarra = (Math.round((this.jogador.xp * 100) / this.xpRequisitado)).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n\n\n  xpGasto() {\n    this.xp = this.jogador.xp;\n    this.jogador.xp = this.mecanicasService.xpGasto(this.jogador.xp);\n    if (this.jogador.xp > 0) this.xpBarra = (Math.round((this.jogador.xp * 100) / this.xpRequisitado)).toString() + \"%\";\n  }\n  uparDeNivel() {\n    if (this.mecanicasService.uparDeNivel(this.xp)) {\n      this.jogador.nivel++;\n      this.jogador.atributos.pontoLivre++;\n      this.pontosDeMelhoria = this.jogador.atributos.pontoLivre;\n    }\n  }\n  valorRequisitado() {\n    this.xpRequisitado = this.mecanicasService.valorRequisitado();\n  }\n  uparAtributos(atributo: number) {\n    if (this.pontosDeMelhoria > 0) {\n      switch (atributo) {\n        case 1:\n          this.melhoria.forca++;\n          break;\n        case 2:\n          this.melhoria.resistencia++;\n          break;\n        case 3:\n          this.melhoria.agilidade++;\n          break;\n        case 4:\n          this.melhoria.percepcao++;\n          break;\n        case 5:\n          this.melhoria.inteligencia++;\n          break;\n        case 6:\n          this.melhoria.carisma++;\n          break;\n        case 7:\n          this.melhoria.sorte++;\n      }\n      this.pontosDeMelhoria--;\n    }\n  }\n  confirmar() {\n    this.jogador.atributos.forca = this.jogador.atributos.forca + this.melhoria.forca;\n    this.jogador.atributos.resistencia = this.jogador.atributos.resistencia + this.melhoria.resistencia;\n    this.jogador.atributos.agilidade = this.jogador.atributos.agilidade + this.melhoria.agilidade;\n    this.jogador.atributos.percepcao = this.jogador.atributos.percepcao + this.melhoria.percepcao;\n    this.jogador.atributos.inteligencia = this.jogador.atributos.inteligencia + this.melhoria.inteligencia;\n    this.jogador.atributos.carisma = this.jogador.atributos.carisma + this.melhoria.carisma;\n    this.jogador.atributos.sorte = this.jogador.atributos.sorte + this.melhoria.sorte;\n    this.melhoria.forca = 0;\n    this.melhoria.resistencia = 0;\n    this.melhoria.agilidade = 0;\n    this.melhoria.percepcao = 0;\n    this.melhoria.inteligencia = 0;\n    this.melhoria.carisma = 0;\n    this.melhoria.sorte = 0;\n    this.pontosDeMelhoria = 0;\n    this.jogador.atributos.pontoLivre = 0;\n  }\n\n\n  atacar() {\n    this.ataque = this.mecanicasService.atacar(this.jogador.atributos.forca);\n    this.monstro.vida -= this.ataque;\n    this.ataque = this.mecanicasService.atacar(this.monstro.atributosBase.forca);\n    this.vidaAtual -= this.ataque;\n    this.vidaBarra = Math.round((this.vidaAtual*100)/this.jogador.vida).toString();\n    this.corVida = \"hsl( calc(var(\" + this.vidaBarra + \") * 1.2) , 80%, 50%)\";\n    this.vidaBarra = this.vidaBarra + \"%\";\n    this.manaBarra = Math.round((this.manaAtual*100)/this.jogador.mana).toString() + \"%\";\n    this.staminaBarra = Math.round((this.staminaAtual*100)/this.jogador.stamina).toString() + \"%\";\n    this.sanidadeBarra = Math.round((this.sanidadeAtual*100)/this.jogador.sanidade).toString() + \"%\";\n    this.mecanicasService.morreu(this.jogador.vida);\n    if (this.monstro.vida < 1) this.missaoCompletaFacil();\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}