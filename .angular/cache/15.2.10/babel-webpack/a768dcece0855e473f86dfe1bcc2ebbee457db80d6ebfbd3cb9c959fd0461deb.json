{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Renegado } from '../shared/renegado/renegado.model';\nimport { AtributosBase } from '../shared/atributosBase/atributosBase.model';\nlet GameplayComponent = class GameplayComponent {\n  constructor(mecanicasService) {\n    this.mecanicasService = mecanicasService;\n    this.jogador = new Renegado();\n    this.xp = 0;\n    this.xpBarra = \"\";\n    this.xpRequisitado = 0;\n    this.melhoria = new AtributosBase(0, 0, 0, 0, 0, 0, 0);\n    this.pontosDeMelhoria = 0;\n    this.ataque = 0;\n    this.contadorDePartidas = 0;\n  }\n  ngOnInit() {\n    this.xpBarra = this.jogador.xp.toString() + \"%\";\n  }\n  meditacao() {\n    document.getElementById(\"meditar\").style.display = \"block\";\n  }\n  fecharModal() {\n    document.getElementById(\"meditar\").style.display = \"none\";\n  }\n  missaoFacil() {\n    this.monstro = this.mecanicasService.partidaFacil();\n  }\n  missaoCompletaFacil() {\n    this.valorRequisitado();\n    this.jogador.vida += this.jogador.vida * 20 / 100;\n    this.jogador.xp = this.mecanicasService.missaoCompletaFacil(this.jogador.xp);\n    this.xpBarra = Math.round(this.jogador.xp * 100 / this.xpRequisitado).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoCompletaMedia() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaMedia(this.jogador.xp);\n    this.xpBarra = Math.round(this.jogador.xp * 100 / this.xpRequisitado).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoCompletaDificil() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaDificil(this.jogador.xp);\n    this.xpBarra = Math.round(this.jogador.xp * 100 / this.xpRequisitado).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoCompletaBoss() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaBoss(this.jogador.xp);\n    this.xpBarra = Math.round(this.jogador.xp * 100 / this.xpRequisitado).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  xpGasto() {\n    this.xp = this.jogador.xp;\n    this.jogador.xp = this.mecanicasService.xpGasto(this.jogador.xp);\n    if (this.jogador.xp > 0) this.xpBarra = Math.round(this.jogador.xp * 100 / this.xpRequisitado).toString() + \"%\";\n  }\n  uparDeNivel() {\n    if (this.mecanicasService.uparDeNivel(this.xp)) {\n      this.jogador.nivel++;\n      this.jogador.atributos.pontoLivre++;\n      this.pontosDeMelhoria = this.jogador.atributos.pontoLivre;\n    }\n  }\n  valorRequisitado() {\n    this.xpRequisitado = this.mecanicasService.valorRequisitado();\n  }\n  uparAtributos(atributo) {\n    if (this.pontosDeMelhoria > 0) {\n      switch (atributo) {\n        case 1:\n          this.melhoria.forca++;\n          break;\n        case 2:\n          this.melhoria.resistencia++;\n          break;\n        case 3:\n          this.melhoria.agilidade++;\n          break;\n        case 4:\n          this.melhoria.percepcao++;\n          break;\n        case 5:\n          this.melhoria.inteligencia++;\n          break;\n        case 6:\n          this.melhoria.carisma++;\n          break;\n        case 7:\n          this.melhoria.sorte++;\n      }\n      this.pontosDeMelhoria--;\n    }\n  }\n  atacar() {\n    this.ataque = this.mecanicasService.atacar(this.jogador.atributos.forca);\n    this.monstro.vida -= this.ataque;\n    this.ataque = this.mecanicasService.atacar(this.monstro.atributosBase.forca);\n    this.jogador.vida -= this.ataque;\n    this.mecanicasService.morreu(this.jogador.vida);\n    if (this.monstro.vida < 1) this.missaoCompletaFacil();\n  }\n};\nGameplayComponent = __decorate([Component({\n  selector: 'app-gameplay',\n  templateUrl: './gameplay.component.html',\n  styleUrls: ['./gameplay.component.scss']\n})], GameplayComponent);\nexport { GameplayComponent };","map":{"version":3,"mappings":"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","names":["Component","Renegado","AtributosBase","GameplayComponent","constructor","mecanicasService","ngOnInit","xpBarra","jogador","xp","toString","meditacao","document","getElementById","style","display","fecharModal","missaoFacil","monstro","partidaFacil","missaoCompletaFacil","valorRequisitado","vida","Math","round","xpRequisitado","contadorDePartidas","missaoCompletaMedia","missaoCompletaDificil","missaoCompletaBoss","xpGasto","uparDeNivel","nivel","atributos","pontoLivre","pontosDeMelhoria","uparAtributos","atributo","melhoria","forca","resistencia","agilidade","percepcao","inteligencia","carisma","sorte","atacar","ataque","atributosBase","morreu","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Guigas\\Documents\\gamingAngular\\RpgGaming\\src\\app\\game\\gameplay\\gameplay.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MecanicasServiceService } from '../mecanicas-service.service';\nimport { Renegado } from '../shared/renegado/renegado.model';\nimport { MonstroFacil } from '../shared/monstroFacil/monstroFacil.model';\nimport { AtributosBase } from '../shared/atributosBase/atributosBase.model';\n\n@Component({\n  selector: 'app-gameplay',\n  templateUrl: './gameplay.component.html',\n  styleUrls: ['./gameplay.component.scss']\n})\nexport class GameplayComponent implements OnInit{\n\n  constructor(public mecanicasService: MecanicasServiceService) { }\n\n  jogador: Renegado = new Renegado();\n  monstro!: MonstroFacil;\n  xp: number = 0;\n  xpBarra: string = \"\";\n  xpRequisitado: number = 0;\n  melhoria: AtributosBase = new AtributosBase(0,0,0,0,0,0,0);\n  pontosDeMelhoria: number = 0;\n  ataque: number = 0;\n  contadorDePartidas: number = 0;\n\n\n\n  ngOnInit(): void {\n    this.xpBarra = this.jogador.xp.toString() + \"%\";\n  }\n\n  meditacao() {\n    document.getElementById(\"meditar\")!.style.display = \"block\";\n  }\n\n  fecharModal() {\n    document.getElementById(\"meditar\")!.style.display = \"none\";\n  }\n\n  missaoFacil() {\n    this.monstro = this.mecanicasService.partidaFacil();\n  }\n  missaoCompletaFacil() {\n    this.valorRequisitado();\n    this.jogador.vida += (this.jogador.vida * 20) / 100;\n    this.jogador.xp = this.mecanicasService.missaoCompletaFacil(this.jogador.xp);\n    this.xpBarra = (Math.round((this.jogador.xp*100)/this.xpRequisitado)).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoCompletaMedia() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaMedia(this.jogador.xp);\n    this.xpBarra = (Math.round((this.jogador.xp*100)/this.xpRequisitado)).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoCompletaDificil() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaDificil(this.jogador.xp);\n    this.xpBarra = (Math.round((this.jogador.xp*100)/this.xpRequisitado)).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n  missaoCompletaBoss() {\n    this.valorRequisitado();\n    this.jogador.xp = this.mecanicasService.missaoCompletaBoss(this.jogador.xp);\n    this.xpBarra = (Math.round((this.jogador.xp*100)/this.xpRequisitado)).toString() + \"%\";\n    this.contadorDePartidas++;\n  }\n\n\n  xpGasto() {\n    this.xp = this.jogador.xp;\n    this.jogador.xp = this.mecanicasService.xpGasto(this.jogador.xp);\n    if(this.jogador.xp > 0) this.xpBarra = (Math.round((this.jogador.xp*100)/this.xpRequisitado)).toString() + \"%\";\n  }\n  uparDeNivel() {\n    if (this.mecanicasService.uparDeNivel(this.xp)) {\n      this.jogador.nivel++;\n      this.jogador.atributos.pontoLivre++;\n      this.pontosDeMelhoria = this.jogador.atributos.pontoLivre;\n    }\n  }\n  valorRequisitado() {\n    this.xpRequisitado = this.mecanicasService.valorRequisitado();\n  }\n  uparAtributos(atributo: number) {\n    if(this.pontosDeMelhoria > 0) {\n      switch(atributo) {\n        case 1:\n          this.melhoria.forca++;\n          break;\n        case 2:\n          this.melhoria.resistencia++;\n          break;\n        case 3:\n          this.melhoria.agilidade++;\n          break;\n        case 4:\n          this.melhoria.percepcao++;\n          break;\n        case 5:\n          this.melhoria.inteligencia++;\n          break;\n        case 6:\n          this.melhoria.carisma++;\n          break;\n        case 7:\n          this.melhoria.sorte++;\n      }\n      this.pontosDeMelhoria--;\n    }\n  }\n\n\n  atacar() {\n    this.ataque = this.mecanicasService.atacar(this.jogador.atributos.forca);\n    this.monstro.vida -= this.ataque;\n    this.ataque = this.mecanicasService.atacar(this.monstro.atributosBase.forca);\n    this.jogador.vida -= this.ataque;\n    this.mecanicasService.morreu(this.jogador.vida);\n    if (this.monstro.vida < 1) this.missaoCompletaFacil();\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}